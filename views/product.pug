extends layout

block content
    .col
        .card.container.mt-4.cardShadow.border-3
            .container.my-3
                .row.row-cols-1.row-cols-lg-2.flex-row-reverse
                    img.d-block.w-100.p-4(src=`${productData.sectionsLinks[0]}`, alt='...')

                    //- #carouselExampleControls.carousel.slide(data-ride='carousel')
                        .carousel-inner
                            .carousel-item.active
                                img.d-block.w-100(src='https://cdn.pixabay.com/photo/2017/07/01/19/48/background-2462431__480.jpg', alt='...')
                            .carousel-item
                                img.d-block.w-100(src='https://cdn.pixabay.com/photo/2019/10/06/10/03/team-4529717__480.jpg', alt='...')
                            .carousel-item
                                img.d-block.w-100(src='https://cdn.pixabay.com/photo/2016/02/19/11/19/computer-1209641__480.jpg', alt='...')
                        a.carousel-control-prev(href='#carouselExampleControls', role='button', data-slide='prev')
                            span.carousel-control-prev-icon(aria-hidden='true')
                            span.sr-only السابق
                        a.carousel-control-next(href='#carouselExampleControls', role='button', data-slide='next')
                            span.carousel-control-next-icon(aria-hidden='true')
                            span.sr-only التالي
                    form(method='POST' action='/cart')
                        
                        div.px-lg-3.text-right
                            h3.my-4= productData.name

                            .text-right.d-flex.bd-highlight.justify-content-between.flex-column.flex-md-row-reverse.align-self-baselin
                                .col.p-0
                                    span.badge.badge-light.mt-2
                                        span= "التوافر:  "
                                        Span.text-success متوفر
                                .col.p-0.mt-4.mt-md-0
                                    h5.mt-2.text-danger.ltr= `${productData.price} K.D`
                            br

                            p.my-0 الكمية
                            div.my-1
                                label.sr-only(for='inlineFormInputGroup')
                                .input-group.my-2
                                    .input-group-prepend
                                    button.btn.btn-light.btn-number.border(type='button', data-type='minus', data-field='quantity')
                                        i.fa.fa-minus(aria-hidden='true')
                                    input.form-control.col-3(type='text', id="intTextBox", name='quantity', value='1', min='1', max='1000')
                                    .input-group-prepend
                                    button.btn.btn-danger.btn-number.tomato(type='button', data-type='plus', data-field='quantity')
                                        i.fa.fa-plus(aria-hidden='true')

                            input#chId(type="hidden" name="productId" value= productData._id)
                            input#chId(type="hidden" name="name" value= productData.name)
                            input#chId(type="hidden" name="price" value= productData.price)
                            button.col.btn.btn-danger.tomato.mt-3(type='submit')
                                | اضف للعربة
                                i.mr-2.fa.fa-cart-plus(aria-hidden='true')
                    
                    
        
        .card.container.p-0.mb-4.border-0.mt-2
            .card-header.bg-white.border-0
                ul.nav.nav-tabs.card-header-tabs
                    li.nav-item
                        a.nav-link.active.px-4.bg-light(href='#') التفاصيل
            .card-body.border-bottom.cardShadow.text-right.border-3
                //- h5.card-title Special title treatment
                p.card-text.mr-4.pr-2= productData.description || "N/A"

    script.
            // Restricts input for the given textbox to the given inputFilter.
        function setInputFilter(textbox, inputFilter) {
        ["input", "keydown", "keyup", "mousedown", "mouseup", "select", "contextmenu", "drop"].forEach(function(event) {
            textbox.addEventListener(event, function() {
            if (inputFilter(this.value)) {
                this.oldValue = this.value;
                this.oldSelectionStart = this.selectionStart;
                this.oldSelectionEnd = this.selectionEnd;
            } else if (this.hasOwnProperty("oldValue")) {
                this.value = this.oldValue;
                this.setSelectionRange(this.oldSelectionStart, this.oldSelectionEnd);
            } else {
                this.value = "";
            }
            });
        });
        }


        // Install input filters.
        setInputFilter(document.getElementById("intTextBox"), function(value) {
        return /^-?\d*$/.test(value); });
      
                    

    
    
